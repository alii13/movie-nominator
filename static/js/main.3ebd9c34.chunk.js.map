{"version":3,"sources":["components/Search.js","redux/actions/moviesActions.js","redux/actions/types.js","redux/constants.js","components/Loader.js","components/Sidebar.js","components/Nominations.js","components/Result.js","App.js","serviceWorker.js","redux/reducers/moviesReducer.js","redux/reducers/index.js","store.js","index.js"],"names":["connect","dispatch","fetchMovies","inputValue","type","axios","get","then","res","movies","data","payload","Search","catch","err","props","useState","setInput","useEffect","className","onSubmit","e","preventDefault","value","onChange","target","placeholder","Loader","state","moviesList","countNominations","limit","setNomination","title","movietitle","error","message","loading","nominate","handleNomination","currentTarget","dataset","div_id","alert","map","i","some","el","Title","key","data-div_id","disabled","onClick","nominations","removeNominate","console","log","localStorgaeData","removeData","share","handleRemove","localStorage","getItem","JSON","parse","filter","z","setItem","stringify","shareValue","setShareValue","length","join","compact","socialMedia","url","window","location","href","media","text","Result","App","Boolean","hostname","match","initialState","combineReducers","action","obj","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ebd9c34.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovies } from \"../redux/actions/moviesActions\";\r\nimport \"./Search.css\";\r\nfunction Search(props) {\r\n    const [inputValue, setInput] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n        //  console.log(inputValue)\r\n        //console.log(props);\r\n    };\r\n    useEffect(() => {\r\n        props.fetchMovies(inputValue);\r\n    }, [inputValue]);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.fetchMovies(inputValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search__container\">\r\n            <form onSubmit={handleSubmit} className=\"input__container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Search a movie by name\"\r\n                />\r\n                <input type=\"submit\" value=\"search\" className=\"input__button\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovies: (inputValue) => dispatch(fetchMovies(inputValue)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);\r\n","import {\r\n  FETCH_MOVIES_REQUEST,\r\n  FETCH_MOVIES_SUCCESS,\r\n  FETCH_MOVIES_FAILURE,\r\n  SET_NOMINATE,\r\n  REMOVE_NOMINATE,\r\n} from \"./types\";\r\nimport { API_KEY } from \"../constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchMovies = (inputValue) => {\r\n  //  console.log(inputValue)\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: FETCH_MOVIES_REQUEST,\r\n    });\r\n    axios\r\n      .get(\r\n        `https://www.omdbapi.com/?i=tt3896198&apikey=${API_KEY}&s=${inputValue}&page=1`\r\n      )\r\n      .then((res) => {\r\n        const movies = res.data;\r\n        dispatch({\r\n          type: FETCH_MOVIES_SUCCESS,\r\n          payload: movies.Search,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: FETCH_MOVIES_FAILURE,\r\n          payload: err,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const setNomination = (title) => {\r\n  const titleData = {\r\n    movietitle: title,\r\n  };\r\n  return {\r\n    type: SET_NOMINATE,\r\n    payload: titleData,\r\n  };\r\n};\r\n\r\nexport const removeNominate = (title) => {\r\n  console.log(\"fired\");\r\n  return {\r\n    type: REMOVE_NOMINATE,\r\n    payload: title,\r\n  };\r\n};\r\n","export const FETCH_MOVIES_REQUEST = 'FETCH_MOVIES_REQUEST';\r\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\r\nexport const FETCH_MOVIES_FAILURE = 'FETCH_MOVIES_FAILURE';\r\nexport const SET_NOMINATE = 'SET_NOMINATE;'\r\nexport const REMOVE_NOMINATE = 'REMOVE_NOMINATE;'","// http://www.omdbapi.com/?t=batman&apikey=1c46dc6c\r\nexport const API_KEY ='1c46dc6c';\r\nexport const NUMBER_OF_PAGE='1';\r\nexport const NOMINATE_LIMIT = 5;","import React from 'react'\r\nimport './Loader.css'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"lds-dual-ring\"></div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNomination } from \"../redux/actions/moviesActions\";\r\nimport { NOMINATE_LIMIT } from \"../redux/constants\";\r\nimport Loader from \"./Loader\";\r\nfunction Sidebar(props) {\r\n  const error = props.state.error.message;\r\n  const movies = props.state.movies;\r\n  const loading = props.state.loading;\r\n  const nominate = props.state.nominate;\r\n  const limit = props.state.limit;\r\n  const countNominations = props.state.countNominations;\r\n\r\n  const handleNomination = (e) => {\r\n    limit - countNominations > 0\r\n      ? props.setNomination(e.currentTarget.dataset.div_id)\r\n      : alert(`You can nominate movies upto ${NOMINATE_LIMIT} !!`);\r\n  };\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h2>Results from Search :</h2>\r\n      <div className=\"sidebar__body\">\r\n        <ul className=\"sidebar__list\">\r\n          {loading ? (\r\n            <h2 className=\"error\">\r\n              <Loader />\r\n            </h2>\r\n          ) : !error ? (\r\n            movies &&\r\n            movies.map((e, i) =>\r\n              nominate && nominate.some((el) => el.movietitle === e.Title) ? (\r\n                <div className=\"list__item\" key={i}>\r\n                  <li>{e.Title} </li>\r\n                  <button\r\n                    data-div_id={e.Title}\r\n                    className=\"item__btn\"\r\n                    disabled={true}\r\n                  >\r\n                    Nominateed!\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"list__item\" key={i}>\r\n                  <li>{e.Title}</li>{\" \"}\r\n                  <button\r\n                    data-div_id={e.Title}\r\n                    className=\"item__btn\"\r\n                    onClick={handleNomination}\r\n                  >\r\n                    Nominate\r\n                  </button>\r\n                </div>\r\n              )\r\n            )\r\n          ) : (\r\n            <h3 className=\"error\">{error}</h3>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    state: state.moviesList,\r\n    countNominations: state.moviesList.countNominations,\r\n    limit: state.moviesList.limit,\r\n  };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNomination: (title) => dispatch(setNomination(title)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n//   export default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Nomination.css\";\r\nimport { removeNominate } from \"../redux/actions/moviesActions\";\r\nimport ShareButton from \"react-social-share-buttons\";\r\n\r\nfunction Nominations(props) {\r\n    const { nominations } = props;\r\n    let localStorgaeData, removeData;\r\n    const soicalMedia = [\"facebook\", \"twitter\", \"google-plus\", \"pinterest\"];\r\n\r\n    const handleRemove = (e) => {\r\n        console.log(e.currentTarget.dataset.div_id);\r\n        removeData = localStorage.getItem(\"Object\");\r\n        removeData = JSON.parse(removeData);\r\n        console.log(removeData);\r\n        removeData = removeData.filter(\r\n            (z, i) => z.movietitle !== e.currentTarget.dataset.div_id\r\n        );\r\n        localStorage.setItem(\"Object\", JSON.stringify(removeData));\r\n        props.removeNominate(e.currentTarget.dataset.div_id);\r\n    };\r\n    let share;\r\n    let [shareValue,setShareValue] =useState('')\r\n\r\n    useEffect(() => {\r\n        if (nominations.length > 0) {\r\n            localStorage.setItem(\"Object\", JSON.stringify(nominations));\r\n            localStorgaeData = localStorage.getItem(\"Object\");\r\n            localStorgaeData = JSON.parse(localStorgaeData);\r\n            share = localStorgaeData.map((e, i) => e.movietitle);\r\n           // shareValue = share.join(\",\");\r\n            setShareValue(share.join(\",\"))\r\n            //console.log(shareValue)\r\n        } else {\r\n            let localStorageData=[]\r\n            localStorgaeData = localStorage.getItem(\"Object\");\r\n            localStorgaeData = JSON.parse(localStorgaeData);\r\n           // console.log(localStorgaeData);\r\n            share = (localStorageData.length<1)?([]):localStorgaeData.map((e, i) => e.movietitle);\r\n          //  shareValue = share.join(\",\");\r\n            setShareValue(share.join(\",\"))\r\n           // console.log(shareValue)\r\n           //console.log(window.location.href)\r\n            //console.log(typeof(shareValue))\r\n        }\r\n    }, [nominations]);\r\n\r\n    // const checkShare =()=>{\r\n    //     if(shareValue.length<1){alert(\"You have to select a movie First\")};\r\n    // }\r\n    return (\r\n        <div className=\"nominations\">\r\n            <h2>Nominations: {nominations.length}</h2>\r\n            <div className=\"nominations__body\">\r\n                <ul className=\"nominations__list\">\r\n                    {nominations.length > 0 ? (\r\n                        nominations.map((e, i) => (\r\n                            <div className=\"list__item\" key={i}>\r\n                                <li>{e.movietitle}</li>\r\n                                <button\r\n                                    className=\"nomination_item__btn\"\r\n                                    data-div_id={e.movietitle}\r\n                                    onClick={handleRemove}\r\n                                >\r\n                                    Remove\r\n                                </button>{\" \"}\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                            <h4 className=\"nominations__title\">You have no nominations</h4>\r\n                        )}\r\n                </ul>\r\n                <div className=\"share__buttons\">\r\n                    {(shareValue.length>1)&&soicalMedia.map((e, i) => (\r\n                        <ShareButton\r\n                            compact\r\n                            socialMedia={e}\r\n                            key={i}\r\n                            url={window.location.href}\r\n                            media={\"https://imgs.xkcd.com/comics/error_code.png\"}\r\n                            text={`Hey I have made this cool nomination of movies - ${shareValue} using movie nominator`}\r\n                            className=\"share__button\"\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        nominations: state.moviesList.nominate,\r\n        countNominations: state.moviesList.countNominations,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeNominate: (title) => dispatch(removeNominate(title)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nominations);\r\n","import React from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport \"./Result.css\"\r\nimport Nominations from './Nominations'\r\n\r\n\r\nfunction Result(props) {\r\n    return (\r\n        <div className=\"results\">\r\n            <Sidebar/>\r\n            <Nominations/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Result\r\n","import React from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport Result from './components/Result';\n\nfunction App(props) {\n  \n  return (\n    <div className=\"app\">\n      <h2 className=\"title\"> Nominate Your Movie</h2>\n    <Search/>\n    <Result/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_MOVIES_REQUEST,\r\n  FETCH_MOVIES_SUCCESS,\r\n  FETCH_MOVIES_FAILURE,\r\n  SET_NOMINATE,\r\n  REMOVE_NOMINATE,\r\n} from \"../actions/types\";\r\nimport { NOMINATE_LIMIT } from \"../constants\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  movies: [],\r\n  nominate: !JSON.parse(localStorage.getItem(\"Object\"))\r\n    ? []\r\n    : JSON.parse(localStorage.getItem(\"Object\")),\r\n  error: [],\r\n  countNominations: 0,\r\n  limit: NOMINATE_LIMIT,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  //console.log(action)\r\n  switch (action.type) {\r\n    case FETCH_MOVIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case FETCH_MOVIES_SUCCESS:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: [],\r\n        movies: action.payload,\r\n      };\r\n\r\n    case FETCH_MOVIES_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case SET_NOMINATE:\r\n      return {\r\n        ...state,\r\n        countNominations: state.countNominations + 1,\r\n        nominate: [...state.nominate, action.payload],\r\n      };\r\n    case REMOVE_NOMINATE:\r\n      return {\r\n        ...state,\r\n        countNominations: state.countNominations - 1,\r\n        nominate: state.nominate.filter(\r\n          (obj) => obj.movietitle !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport moviesReducer from './moviesReducer';\r\n\r\nexport default combineReducers({\r\n  moviesList: moviesReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './redux/reducers';\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}